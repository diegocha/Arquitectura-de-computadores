# -*- coding: utf-8 -*-
"""Punto2Taller01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_WUTseNyvOajWzAUCSsti6SS_CLcarmz
"""

#### PUNTO 2 TALLER 01 ARQUITECTURA DE COMPUTADORES ####

import math
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

## Datos
bitExpo = 4
bitMantisa = 11

## Numero mas negativo, numero mas negativo y cantidad de numeros
numMasNeg = -(2-2**(-bitMantisa)) * (2**(bitExpo-1))
print('El número más negativo es %f \n' % numMasNeg)

numMasPos =  (2-2**(-bitMantisa)) * (2**(bitExpo-1))
print('El número más positivo es %f \n' % numMasPos)

cuantos = 2**(bitExpo+bitMantisa+1)
print('En total se pueden representar %d números \n' % cuantos)

## Generando el vector con todos los numeros que se pueden representar con este estandar
casicero = 10**(-16)
positivos = np.array( np.logspace( math.log10(casicero), math.log10(numMasPos), num=cuantos/2, endpoint=True, base=10) )
negativos = -positivos[::-1]
todosLosNum = np.concatenate((negativos,positivos), axis=None)
print(todosLosNum)
print('\n')

## Representacion grafica de todos los numeros
x1 = todosLosNum
plt.hist(x1, bins=50, density=False, log=True)
plt.xlabel('Todos los números')
plt.title(r'Histograma de todos los números del estándar')
plt.ylabel('Frecuencia')
plt.xticks(range(-16, 17,2))
plt.grid(True)
plt.show()

## Espaciamiento entre 0 y 1
x2 = positivos[(0 <= positivos) & (positivos <=1)]
plt.hist(x2, bins=50, density=False, log=True)
plt.xlabel('Números entre 0 y 1')
plt.title(r'Histograma de los números del estándar en [0, 1]')
plt.ylabel('Frecuencia')
plt.grid(True)
plt.show()

## Espaciamiento entre 1 y el maximo
x3 = positivos[positivos>=1]
plt.hist(x3, bins=50, density=False, log=True)
plt.xlabel('Números entre 1 y el máximo')
plt.title(r'Histograma de los números del estándar en [1, -15.996094]')
plt.ylabel('Frecuencia')
plt.xticks(range(1, 17,1))
plt.grid(True)
plt.show()